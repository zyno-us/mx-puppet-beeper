FROM node:14-alpine AS builder

WORKDIR /opt/mx-puppet-discord

RUN apk --no-cache add git python2 make g++ pkgconfig \
    build-base \
    cairo-dev \
    jpeg-dev \
    pango-dev \
    musl-dev \
    giflib-dev \
    pixman-dev \
    pangomm-dev \
    libjpeg-turbo-dev \
    freetype-dev

# run build process as user in case of npm pre hooks
# pre hooks are not executed while running as root
RUN chown -R node:node /opt/mx-puppet-discord
USER node

COPY --chown=node:node package.json yarn.lock ./
COPY --chown=node:node packages/mx-puppet-discord/package.json packages/mx-puppet-discord/package.json
COPY --chown=node:node packages/mx-puppet-bridge/package.json packages/mx-puppet-bridge/package.json
COPY --chown=node:node packages/soru-matrix-bot-sdk/package.json packages/soru-matrix-bot-sdk/package.json
COPY --chown=node:node packages/soru-slack-client/package.json packages/soru-slack-client/package.json
COPY --chown=node:node packages/mx-puppet-slack/package.json packages/mx-puppet-slack/package.json
COPY --chown=node:node packages/matrix-slack-parser/package.json packages/matrix-slack-parser/package.json

RUN yarn

COPY --chown=node:node packages/ ./packages

RUN cd packages/mx-puppet-discord && yarn build

FROM node:14-alpine

ARG TARGETARCH=amd64

VOLUME /data

ENV CONFIG_PATH=/data/config.yaml \
    REGISTRATION_PATH=/data/discord-registration.yaml

RUN apk add --no-cache \
  su-exec \
  bash \
  curl \
  jq \
  cairo \
  jpeg \
  pango \
  musl \
  giflib \
  pixman \
  pangomm \
  libjpeg-turbo \
  freetype && \
  curl -sLo yq https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_${TARGETARCH} && \
  chmod +x yq && mv yq /usr/bin/yq

WORKDIR /opt/mx-puppet-discord
COPY packages/mx-puppet-discord/docker-run.sh ./
COPY --from=builder /opt/mx-puppet-discord ./

# change workdir to /data so relative paths in the config.yaml
# point to the persistent volume
WORKDIR /data
ENTRYPOINT ["/opt/mx-puppet-discord/docker-run.sh"]
