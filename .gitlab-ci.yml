build-slack:
  image: docker:latest
  variables:
    BEEPER_BRIDGE_TYPE: slack
  services:
  - docker:dind
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker pull $CI_REGISTRY_IMAGE/slack:latest || true
  - docker build -f docker/Dockerfile-slack --pull --cache-from $CI_REGISTRY_IMAGE/slack:latest --tag $CI_REGISTRY_IMAGE/slack:$CI_COMMIT_SHA .
  - docker push $CI_REGISTRY_IMAGE/slack:$CI_COMMIT_SHA
  - if [ $CI_COMMIT_BRANCH == "main" ]; then docker tag $CI_REGISTRY_IMAGE/slack:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/slack:latest && docker push $CI_REGISTRY_IMAGE/slack:latest; fi
  after_script:
  - |
    if [[ "$CI_COMMIT_BRANCH" == "main" && "$CI_JOB_STATUS" == "success" ]]; then
      apk add --update curl jq
      rm -rf /var/cache/apk/*

      jq -n '
         {
           password:  env.BEEPER_DEV_ADMIN_NIGHTLY_PASS,
           bridge:    env.BEEPER_BRIDGE_TYPE,
           image:     "\(env.CI_REGISTRY_IMAGE)/slack:\(env.CI_COMMIT_SHA)",
           channel:   "STABLE"
         }
        ' | curl "$BEEPER_DEV_ADMIN_API_URL" -H "Content-Type: application/json" -d @-

      jq -n '
         {
           password:    env.BEEPER_PROD_ADMIN_NIGHTLY_PASS,
           bridge:      env.BEEPER_BRIDGE_TYPE,
           image:       "\(env.CI_REGISTRY_IMAGE)/slack:\(env.CI_COMMIT_SHA)",
           channel:     "INTERNAL",
           deployNext:  true
         }
         ' | curl "$BEEPER_PROD_ADMIN_API_URL" -H "Content-Type: application/json" -d @-
    fi

build-discord:
  image: docker:latest
  variables:
    BEEPER_BRIDGE_TYPE: discord
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/discord:latest || true
    - docker build -f docker/Dockerfile-discord --pull --cache-from $CI_REGISTRY_IMAGE/discord:latest --tag $CI_REGISTRY_IMAGE/discord:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/discord:$CI_COMMIT_SHA
    - if [ $CI_COMMIT_BRANCH == "main" ]; then docker tag $CI_REGISTRY_IMAGE/discord:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/discord:latest && docker push $CI_REGISTRY_IMAGE/discord:latest; fi
  after_script:
  - |
    if [[ "$CI_COMMIT_BRANCH" == "main" && "$CI_JOB_STATUS" == "success" ]]; then
      apk add --update curl jq
      rm -rf /var/cache/apk/*

      jq -n '
         {
           password:  env.BEEPER_DEV_ADMIN_NIGHTLY_PASS,
           bridge:    env.BEEPER_BRIDGE_TYPE,
           image:     "\(env.CI_REGISTRY_IMAGE)/discord:\(env.CI_COMMIT_SHA)",
           channel:   "STABLE"
         }
        ' | curl "$BEEPER_DEV_ADMIN_API_URL" -H "Content-Type: application/json" -d @-

      jq -n '
         {
           password:    env.BEEPER_PROD_ADMIN_NIGHTLY_PASS,
           bridge:      env.BEEPER_BRIDGE_TYPE,
           image:       "\(env.CI_REGISTRY_IMAGE)/discord:\(env.CI_COMMIT_SHA)",
           channel:     "INTERNAL",
           deployNext:  true
         }
         ' | curl "$BEEPER_PROD_ADMIN_API_URL" -H "Content-Type: application/json" -d @-
    fi
